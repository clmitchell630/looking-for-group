{"version":3,"sources":["pages/about.js","components/Register/index.js","components/Grid/index.js","pages/landing.js","utils/API.js","pages/match.js","pages/question.js","components/Registration/index.js","pages/register.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["About","className","id","Register","to","role","Description","Container","fluid","children","Landing","Component","saveUser","formData","axios","post","Match","state","lastMatch","handleThumbsUpButton","savedMatch","Question","gameDropdown","levelDropdown","trollDropdown","skillDropdown","handleInputChange","evt","target","name","value","setState","handleFormSubmit","preventDefault","console","log","API","game","playLevel","troll","skillLevel","then","res","catch","err","onChange","this","Registration","for","type","class","placeholder","aria-describedby","Navbar","htmlFor","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c555abc9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nfunction About() {\n    return (\n        <div className=\"About\">\n            <div className=\"container\">\n                <br></br>\n                <hr></hr>\n                <br></br>\n                <h1 id=\"Aboutlfg\">About LFG.</h1>\n                <br></br>\n                <hr></hr>\n                <br></br>\n                <h4>Looking For Group is an app for individuals who enjoy playing video games, and are looking for others who share the same enjoyment.\n                Our app is intended to match up individuals with one another and create a friendship through video games.</h4>\n                <br></br>\n                <br></br>\n                <h4>Depending on a person's playstyle, some prefer a solo gaming experience, while others enjoy a shared gaming experience with other players.\n                    This app specifically seeks to make it easier for gamers to group up together, make friendships, and facilitate the shared experience.</h4>\n                <br></br>\n                <br></br>\n                <h4>In the gaming world currently, trying to find groups of new people to play with can be a challenge. Most multiplayer games have their own method to find another player for you; however, it is often for short term sessions to accomplish a goal and when you've completed it, its gg and goodbye.\n                    We aim to extend that period with hopes of creating long lasting friendships with people you enjoy gaming with.\n                    We aim to put all of this into a centralized location, so that we are the one stop shop for finding others to play with.\n                    </h4>\n            </div>\n        </div>\n\n    );\n}\n\nexport default About;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Register() {\n    return (\n        <Link to='/register'>\n            <div id=\"regButton\">\n                <button className=\"btn btn-primary\" role=\"button\">Register</button>\n            </div>\n        </Link>\n    );\n}\n\nexport function Description() {\n    return (\n        <div id=\"description\">\n            <p className=\"appDescription\"> Looking for Group is designed to help bring gamers together who don't typically have friends to play with online.\n                <br />\n                Currently, trying to find groups of new people to play with online can be a challenge.\n                <br />\n                We aim to extend that period with the hopes of creating long lasting friendships with people you enjoy gaming with.\n                <br />\n                We aim to put all of this into a centralized location so that we are the one stop shop for finding others to play with.\n            </p>\n        </div>\n    )\n}\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Register, Description } from '../components/Register';\nimport { Col, Row, Container } from '../components/Grid';\n\n\nclass Landing extends Component {\n\n    render() {\n        return (\n            <div>\n                <Container>\n                <div>\n                    <Description />\n                    <br />\n                    <br />\n                    <Register />\n                </div>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default Landing;","import axios from \"axios\";\n\nexport default {\n    saveUser: function (formData) {\n        return axios.post(\"/api/user\", formData);\n    }\n}\n","import React, { Component } from \"react\";\nimport { ThumbsBttns, lastMatch } from \"../components/Match\";\nimport API from '../utils/API';\nimport { Col, Row, Container } from '../components/Grid';\n\nclass Match extends Component {\n    state = {\n        lastMatch: []\n    };\n\n    // componentDidMount() {\n    //     API.getMatch()\n    //     .then(res => this.setState({lastMatch: res.data}))\n    //     .catch(err => console.log(err))\n    // }\n\n    handleThumbsUpButton = savedMatch => {\n\n\n    }\n\n    render() {\n        return (\n            <Container>\n                <div className=\"jumbotron\" id=\"jumbo\">\n                    <h2>Your Match!</h2>\n                    <h5>\n                        Username: Connander\n                    </h5>\n                    <h5>\n                        Game: Halo Reach\n                    </h5>\n                    <h5>\n                        Play Level: Casual\n                    </h5>\n                    <h5>\n                        Troll?: No\n                    </h5>\n                    <h5>\n                        Skill Level: 1\n                    </h5>\n                    <h2>\n                        Connect!\n                    </h2>\n                    <h5>wolves3777@gmail.com</h5>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default Match;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport API from '../utils/API';\nimport { userInfo } from \"os\";\nimport { Link } from 'react-router-dom';\n\nclass Question extends Component {\n\n    state = {\n\n        gameDropdown: \"\",\n        levelDropdown: \"\",\n        trollDropdown: \"\",\n        skillDropdown: \"\",\n\n    };\n\n\n\n\n    handleInputChange = evt => {\n\n        const { name, value } = evt.target;\n        this.setState({ [name]: value });\n\n    };\n\n    handleFormSubmit = evt => {\n        evt.preventDefault();\n        console.log(this.state);\n        API.saveUser({\n            game: this.state.gameDropdown,\n            playLevel: this.state.levelDropdown,\n            troll: this.state.trollDropdown,\n            skillLevel: this.state.skillDropdown\n        })\n            .then(res => console.log(\"success\"))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div className=\"Question\">\n                <br />\n                <h2 id=\"questionaireh\">Pre-Matching Questionaire</h2>\n                <br></br>\n                <div className=\"jumbotron\" id=\"jumbo\">\n                    <p>What game are you looking to group up in?</p>\n                    <div className=\"dropdown\">\n                        <select onChange={this.handleInputChange} value={this.state.gameDropdown} name=\"gameDropdown\">\n                            <option value=\"League of Legends\">League Of Legends</option>\n                            <option value=\"Escape From Tarkov\">>Escape From Tarkov</option>\n                            <option value=\"Halo Reach\">>Halo Reach</option>\n                            <option value=\"Borderlands 3\">>Borderlands 3</option>\n                            <option value=\"Call of Duty: Black Ops 3\">>Call of Duty: Black Ops 3</option>\n                            <option value=\"Call of Duty: Modern Warfare\">>Call of Duty: Modern Warfare</option>\n                            <option value=\"BattleField 4\">>BattleField 4</option>\n                            <option value=\"BattleField 1\">>BattleField 1</option>\n                            <option value=\"Dota\">>Dota</option>\n                            <option value=\"Overwatch\">>Overwatch</option>\n                            <option value=\"World of Warcraft\">>World of Warcraft</option>\n                            <option value=\"Runescape\">>Runescape</option>\n                            <option value=\"Hearthstone\">>Hearthstone</option>\n                            <option value=\"Counter-Strike\">>Counter-Strike</option>\n                        </select>\n                    </div>\n                    <br></br>\n                    <p>Level of play</p>\n                    <div className=\"dropdown\">\n                        <select value={this.state.levelDropdown} onChange={this.handleInputChange} name=\"levelDropdown\">\n                            <option value=\"Casual\">Casual</option>\n                            <option value=\"Competitive\">Competitive</option>\n                            <option value=\"Speed-Run\">Speed-Run</option>\n                        </select>\n                    </div>\n                    <br></br>\n                    <p>Troll or not?</p>\n                    <div className=\"dropdown\">\n                        <select value={this.state.trollDropdown} onChange={this.handleInputChange} name=\"trollDropdown\">\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                    </div>\n                    <br></br>\n                    <p>Skill level</p>\n                    <div className=\"dropdown\">\n                        <select value={this.state.skillDropdown} onChange={this.handleInputChange} name=\"skillDropdown\">\n                            <option value=\"1\">1(Hot Trash)</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3(Average Joe)</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5(Legendary)</option>\n                        </select>\n                    </div>\n                    <br></br>\n\n                    <div className=\"buttonDiv\">\n                        <Link to=\"/yourmatch\">\n                            {/*remember to add back the  onClick={this.handleFormSubmit}*/}\n                            <button className=\"saveUser btn btn-primary\">Save Results</button>\n                        </Link>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Question;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Registration extends Component {\n\n    render() {\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputPassword1\">Re-enter Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n                </div>\n                <Link to=\"/matchform\">\n                    <button class=\"btn btn-primary\">Submit</button>\n                </Link>\n            </form>\n        );\n    }\n}\n\nexport default Registration;\n","import React, { Component } from 'react';\r\nimport Registration from '../components/Registration';\r\nimport { Col, Row, Container } from '../components/Grid';\r\n\r\nclass Register extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Registration />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n    return (\n        <div>\n            <nav className=\"nav\">\n                <div className=\"col-12\">\n                    <div className=\"row\" >\n                        <Link to={'/'}>\n                            <span className=\"nav-link\">LFG</span>\n                        </Link>\n                        <Link to={'/about'}>\n                            <span className=\"nav-link\">What's this?</span>\n                        </Link>\n                        <Link to={'/matchform'}>\n                            <button type=\"button\" className=\"btn btn-link dropdown-toggle\">\n                                Sign-in\n                            </button>\n                        </Link>\n                        <div className=\"dropdown-menu dropdown-menu-right\">\n                            <form className=\"dropdown-menu p-4\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleDropdownFormEmail2\">Email address</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleDropdownFormPassword2\">Password</label>\n                                    <input type=\"password\" className=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"form-check\">\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck2\" />\n                                        <label className=\"form-check-label\" htmlFor=\"dropdownCheck2\">\n                                            Remember me\n                                        </label>\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-primary\">Sign in</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './pages/about';\nimport Landing from './pages/landing';\nimport Match from './pages/match';\nimport Question from './pages/question';\nimport Register from './pages/register';\nimport Signup from './pages/signup';\nimport './App.css';\nimport Navbar from './components/Navbar/';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/register' component ={Register} />\n            <Route exact path='/matchform' component ={Question} />\n            <Route exact path='/yourmatch' component ={Match} />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}